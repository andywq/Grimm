"""add_activity_relate_models

Revision ID: 501e624380a2
Revises: 186dd5501b6c
Create Date: 2024-05-13 07:46:06.644104

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mysql

# revision identifiers, used by Alembic.
revision = '501e624380a2'
down_revision = '186dd5501b6c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('duty',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False, comment='活动中担任的职责'),
    sa.Column('seq', sa.Integer(), nullable=False, comment='导出汇总表时的列顺序，小的数字靠左'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('seq')
    )
    op.create_table('gift',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False),
    sa.Column('seq', sa.Integer(), nullable=False, comment='导出汇总表时的列顺序，小的数字靠左'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name'),
    sa.UniqueConstraint('seq')
    )
    op.create_table('pre_signed_urls',
    sa.Column('token', sa.String(length=64), nullable=False, comment='预生成的令牌'),
    sa.Column('openid', sa.String(length=64), nullable=True, comment='令牌授权的用户ID'),
    sa.Column('expire_at', sa.DateTime(), nullable=True, comment='令牌失效的时间'),
    sa.Column('target_openid', sa.String(length=64), nullable=True, comment='令牌对应的授权该用户可以查看的用户的ID'),
    sa.Column('side', sa.String(length=16), nullable=True, comment='身份证正/反面 reverse=背面 obverse=正面'),
    sa.PrimaryKeyConstraint('token')
    )
    op.create_table('project',
    sa.Column('id', sa.BigInteger(), autoincrement=True, nullable=False),
    sa.Column('name', sa.String(length=60), nullable=False, comment='项目名'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.add_column('activity', sa.Column('project_seq', sa.Integer(), nullable=True, comment='对应项目的活动场次'))
    op.add_column('activity', sa.Column('project_id', sa.BigInteger(), nullable=True))
    op.add_column('activity', sa.Column('remark', sa.String(length=500), nullable=True, comment='备注'))
    op.drop_constraint('activity_ibfk_3', 'activity', type_='foreignkey')
    op.create_foreign_key(None, 'activity', 'project', ['project_id'], ['id'])
    op.drop_column('activity', 'assignee')
    op.add_column('activity_participant', sa.Column('duty_id', sa.BigInteger(), nullable=True))
    op.add_column('activity_participant', sa.Column('is_child', sa.Boolean(), server_default='0', nullable=True, comment='报名人是否是孩子'))
    op.add_column('activity_participant', sa.Column('gifts', sa.JSON(), nullable=True, comment='领取物品种类和数量'))
    op.create_foreign_key(None, 'activity_participant', 'duty', ['duty_id'], ['id'])
    op.add_column('user', sa.Column('idcard_obverse_path', sa.String(length=255), nullable=True, comment='用户身份证国徽面路径（正面）'))
    op.add_column('user', sa.Column('idcard_reverse_path', sa.String(length=255), nullable=True, comment='用户身份证人像面路径（背面）'))
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('user', 'idcard_reverse_path')
    op.drop_column('user', 'idcard_obverse_path')
    op.drop_constraint(None, 'activity_participant', type_='foreignkey')
    op.drop_column('activity_participant', 'gifts')
    op.drop_column('activity_participant', 'is_child')
    op.drop_column('activity_participant', 'duty_id')
    op.add_column('activity', sa.Column('assignee', mysql.VARCHAR(length=28), nullable=True, comment='活动领队/负责人,待定'))
    op.drop_constraint(None, 'activity', type_='foreignkey')
    op.create_foreign_key('activity_ibfk_3', 'activity', 'user', ['assignee'], ['openid'])
    op.drop_column('activity', 'remark')
    op.drop_column('activity', 'project_id')
    op.drop_column('activity', 'project_seq')
    op.drop_table('project')
    op.drop_table('pre_signed_urls')
    op.drop_table('gift')
    op.drop_table('duty')
    # ### end Alembic commands ###
